
* {
     margin: 0;
     padding: 0;
}

/* start for the body and such */

body {
     background-color: lightgrey;
     font-family: 'Roboto', sans-serif;
}

.navbar {
     width: 1000px;
     margin: 0 auto;
}

.navbar, .navlinks, .nav {
     display: flex;
     justify-content: space-between;
     align-items: center;
}

.nav {
     height: 80px;
     background-color: #222;
     color: white;
     margin-bottom: 20px;
}

.navlinks {
     width: 50%;
     list-style-type: none; /* removes the bullets */
     align-items: center;
}

.navlinks a{
     color: whitesmoke;
     text-decoration: none;
     font-weight: bold;
}

.btn {
     height: 30px;
     width: 100px;
     color: white;
     background-color: aquamarine;
     border: none;
     font-size: 1rem;
     font-weight: bold;
}

/* starting on everything below the navbar */

.navbar .main {
     align-items: flex-start;
}
.column1 {
     flex: 2;
     margin-right: 20px;
}
.column2{
     flex: 1;
}

.card {
     background-color: white;
     border: 2px solid grey;
     margin-bottom: 20px;
     border-radius: 5px;
     font-size: 1.3rem;
     overflow: hidden;
}

.header {
     padding: 20px;
     background-color: #222;
     color: whitesmoke;
     display: flex;
     align-items: center;
}

.body {
     padding: 20px;
}
.body h1, .body h2, .body h3, .body p {
     margin: 20px 5px;
}


.user .header {
     background-color: lightseagreen;
     height: 85px;
     margin-bottom: 70px;
     display: block;
}

/* there is a difference between using a comma between the class types and not using the comma betwen the class types. You can use a comma if you are intending to separate the class types / they are not both assigned to a single element. In this case, the user and header classes were both assigned to a single element, so there is no need for a comma to differentiate the two. However, we do need to specify it in this manner instead of having the separate .user and .header sections because then otherwise we may have conflicting style choices and this enables a greater level of specificity for us  */

.cardfooter {
     border-top: 2px solid #999;
     display: flex;
     align-items: center;
     padding: 20px;
}


.pfp{
     border-radius: 50%;
     background-color: white;
     height: 190px;
     padding: 5px;
}
.icon {
     height: 20px;
}


a {
     color: lightseagreen;
}
.dates {
     color: darkgrey;
}


.cardlist {
     padding: 0 20px;
     padding-top: 10px;
     list-style-type: none;
}
.card-list-1, .card-list-1 > * {
     display: flex;
     align-items: center;
}

/* have to specify with the > symbol to ensure that it chooses all of the child elements under card-list-1, otherwise it will only apply to 1 layer of child elements deeper, not all of the deeper child elements */


.card-list-1 {
     margin-bottom: 20px;
     justify-content: space-between;
}

.card-list-1.start {
     justify-content: flex-start;
}

.avatars, .icon {
     height: 50px;
     border-radius: 50%;
     margin-right: 10px;
}

.icon {
     height: 30px;
}

.badge {
     font-size: 1rem;
     height: 24px;
     line-height: 24px;
     padding: 0 10px;
     background-color: #999;
     border-radius: 12px;
     margin-right: 10px;
}

/* I still am unable to figure out why my connection requests image is having such a high top margin compared to the actual profile page requirements. not sure which number I'm missing / have to continue playing around with */